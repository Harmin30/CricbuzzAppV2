@model IEnumerable<CricbuzzAppV2.Models.PlayerStats>
@{
    Layout = "_UserLayout";
    ViewData["Title"] = "Top Batsmen";
    var formats = Enum.GetValues(typeof(CricbuzzAppV2.Models.PlayerStats.CricketFormat));
    var selectedFormat = ViewBag.SelectedFormat as string;
}

<style>
/* Back Button */
.btn-back {
    display: inline-block;
    margin-bottom: 20px;
    background-color: #00a651;
    color: white;
    border-radius: 25px;
    padding: 10px 20px;
    text-decoration: none;
    transition: background-color 0.3s ease;
}
.btn-back:hover { background-color: #007e3e; color:white; }

/* Filter Form */
.filter-form { margin-bottom: 20px; display: flex; align-items: center; gap: 10px; }

/* Player Cards */
.top-list-container { margin-top: 10px; }
.player-card {
    display: flex;
    align-items: center;
    padding: 15px;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.05);
    margin-bottom: 15px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    background-color: #fff;
    cursor: pointer;
}
.player-card:hover { transform: translateY(-5px); box-shadow:0 8px 25px rgba(0,0,0,0.15);}
.player-img { width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 15px; border: 2px solid #00a651; }
.player-info h5 { margin:0; font-weight:600; }
.player-info p { margin:0; color:#666; font-size:0.9rem; }
.stats-badge { margin-left:auto; text-align:right; }
.stats-badge span { display:inline-block; background-color:#00a651; color:#fff; padding:5px 10px; border-radius:25px; font-weight:600; font-size:0.9rem; }
</style>

<a href="@Url.Action("Index","UserPortal")" class="btn-back">← Back to Home</a>

<h2 class="text-success mb-3">🏏 Top Batsmen</h2>

<form method="get" class="filter-form">
    <label for="format">Filter by Format:</label>
    <select id="format" name="format" class="form-select" style="width:150px;">
        <option value="">All</option>
        @foreach(var f in formats)
        {
            <option value="@f" selected="@(selectedFormat == f.ToString() ? "selected" : null)">@f</option>

        }
    </select>
    <button class="btn btn-success">Filter</button>
</form>

<div class="top-list-container">
    @foreach (var ps in Model.Select((value,index)=> new {value,index}))
    {
        <div class="player-card" onclick="location.href='@Url.Action("PlayerDetails","UserPortal", new {id = ps.value.PlayerId})'">
            <img src="@(string.IsNullOrEmpty(ps.value.Player?.ImageUrl)?"/images/default-player.png":ps.value.Player.ImageUrl)" class="player-img"/>
            <div class="player-info">
                <h5>@ps.value.Player?.FullName</h5>
                <p>@ps.value.Player?.Team?.TeamName • @ps.value.Format</p>
            </div>
            <div class="stats-badge">
                <span>@ps.value.Runs <i class="bi bi-arrow-up-circle-fill"></i></span>
                @if(ps.index==0){<span class="ms-2">🥇</span>}
                else if(ps.index==1){<span class="ms-2">🥈</span>}
                else if(ps.index==2){<span class="ms-2">🥉</span>}
            </div>
        </div>
    }
</div>
